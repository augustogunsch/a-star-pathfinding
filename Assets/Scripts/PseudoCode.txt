NODE CONTAINS
	WALKABLE
	POSITION WORLD
	POSITION GRID


GRID CONTAINS
	NODES
	VOID CREATEGRID()
	NODE GETNODEFROMWORLDPOSITION(VECTOR3 POSITION)
	NODE GETNODE(INT X, INT Y)
	NODE[] GETNEIGHBOURS(NODE NODE)

PATHFINDING CONTAINS
	GRID REFERENCE
	LIST OPENSET
	HASHSET CLOSEDSET

	// NOT OPTIMIZED YET!
	PATH FINDPATH(VECTOR3 FROM, VECTOR3 TO)
		OPENSET = NEW LIST
		CLOSEDSET = NEW HASHSET
		OPENSET.ADD(GRID.GETNODEFROMWORLDPOSITION(FROM));
				
		NODE CURRENTNODE = OPENSET(0);
		WHILE OPENSET IS NOT EMPTY
			FOREACH OPEN NODE
				IF NODE.FCOST < CURRENTNODE.FCOST
					CURRENTNODE = NODE
			OPENSET.REMOVE(CURRENTNODE)
			CLOSEDSET.ADD(CURRENTNODE)
			IF CURRENTNODE IS TARGET
					FOUNDPATH
			FOREACH NEIGHBOUR OF CURRENTNODE				
				IF NEIGHBOUR IS IN CLOSEDSET
					CONTINUE

				INT NEWGCOST = DISTANCE FROM CURRENT TO NEIGHBOUR + CURRENT.GCOST

				IF NEIGHBOUR IS NOT IN OPENSET OR NEWGCOST < NEIGHBOUR.GCOST
					NEIGHBOUR.GCOST = NEWGCOST
					NEIGHBOUR.HCOST = DISTANCE FROM NEIGHBOUR TO TARGET
					NEIGHBOUR.PARENT = CURRENTNODE
					IF NEIGHBOUR IS NOT IN OPENSET
						NEIGHBOUR.ADD(OPENSET)
				
			